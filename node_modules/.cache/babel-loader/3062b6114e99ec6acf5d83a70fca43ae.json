{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\VSCcode\\\\REACT_GOIT\\\\goit-react-hw-01-components\\\\src\\\\components\\\\friend_list\\\\FriendList.jsx\";\nimport Friend from \"./friend_list.module.css\";\nimport PropsTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: Friend.friendList,\n    children: friends.map(_ref2 => {\n      let {\n        avatar,\n        name,\n        isOnline,\n        id\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FriendListItem, {\n        name: name,\n        avatar: avatar,\n        isOnline: isOnline\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 63\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/VSCcode/REACT_GOIT/goit-react-hw-01-components/src/components/friend_list/FriendList.jsx"],"names":["Friend","PropsTypes","FriendList","friends","friendList","map","avatar","name","isOnline","id","propTypes","PropTypes","arrayOf","shape","number","isRequired","string","bool"],"mappings":";AACA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,OAAO,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACvC,sBACI;AAAI,IAAA,SAAS,EAAEH,MAAM,CAACI,UAAtB;AAAA,cACKD,OAAO,CAACE,GAAR,CAAY;AAAA,UAAC;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,QAAhB;AAA0BC,QAAAA;AAA1B,OAAD;AAAA,0BAAqC,QAAC,cAAD;AAE9C,QAAA,IAAI,EAAEF,IAFwC;AAG9C,QAAA,MAAM,EAAED,MAHsC;AAI9C,QAAA,QAAQ,EAAEE;AAJoC,SACzCC,EADyC;AAAA;AAAA;AAAA;AAAA,cAArC;AAAA,KAAZ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXM;KAAMP,U;AAgBbA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,OAAO,EAAEQ,SAAS,CAACC,OAAV,CACPD,SAAS,CAACE,KAAV,CAAgB;AACdJ,IAAAA,EAAE,EAAEE,SAAS,CAACG,MAAV,CAAiBC,UADP;AAEdT,IAAAA,MAAM,EAAEK,SAAS,CAACK,MAFJ;AAGdT,IAAAA,IAAI,EAAEI,SAAS,CAACK,MAAV,CAAiBD,UAHT;AAIdP,IAAAA,QAAQ,EAAEG,SAAS,CAACM;AAJN,GAAhB,CADO;AADY,CAAvB","sourcesContent":["\r\nimport Friend from \"./friend_list.module.css\";\r\nimport PropsTypes from \"prop-types\";\r\nexport const FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={Friend.friendList}>\r\n            {friends.map(({ avatar, name, isOnline, id }) => (<FriendListItem\r\n                key={id}\r\n                name={name}\r\n                avatar={avatar}\r\n                isOnline={isOnline} />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool,\r\n    })\r\n  ),\r\n};"]},"metadata":{},"sourceType":"module"}